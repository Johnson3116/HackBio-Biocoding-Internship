def translate_dna(dna_seq):
    # convert DNA sequence is in uppercase
    dna_seq = dna_seq.upper()
    # Genetic code dictionary
    gencode = {
        'ATA':'I', 'ATC':'I', 'ATT':'I', 'ATG':'M',
        'ACA':'T', 'ACC':'T', 'ACG':'T', 'ACT':'T',
        'AAC':'N', 'AAT':'N', 'AAA':'K', 'AAG':'K',
        'AGC':'S', 'AGT':'S', 'AGA':'R', 'AGG':'R',
        'CTA':'L', 'CTC':'L', 'CTG':'L', 'CTT':'L',
        'CCA':'P', 'CCC':'P', 'CCG':'P', 'CCT':'P',
        'CAC':'H', 'CAT':'H', 'CAA':'Q', 'CAG':'Q',
        'CGA':'R', 'CGC':'R', 'CGG':'R', 'CGT':'R',
        'GTA':'V', 'GTC':'V', 'GTG':'V', 'GTT':'V',
        'GCA':'A', 'GCC':'A', 'GCG':'A', 'GCT':'A',
        'GAC':'D', 'GAT':'D', 'GAA':'E', 'GAG':'E',
        'GGA':'G', 'GGC':'G', 'GGG':'G', 'GGT':'G',
        'TCA':'S', 'TCC':'S', 'TCG':'S', 'TCT':'S',
        'TTC':'F', 'TTT':'F', 'TTA':'L', 'TTG':'L',
        'TAC':'Y', 'TAT':'Y', 'TAA':'*', 'TAG':'*',
        'TGC':'C', 'TGT':'C', 'TGA':'*', 'TGG':'W'
    }
    # Function to translate a single frame
    def translate_frame(seq):
        protein = ""  # Initialize protein sequence
        for i in range(0, len(seq) - 2, 3):  # Process in codon (triplet) increments
            codon = seq[i:i + 3]
            protein += gencode.get(codon, '?')  # '?' for unknown codons
        return protein
    # Compute forward reading frames
    f1 = translate_frame(dna_seq[0:])
    f2 = translate_frame(dna_seq[1:])
    f3 = translate_frame(dna_seq[2:])
    # Reverse the sequence for reverse frames
    reverse_seq = dna_seq[::-1]  # Reverse the DNA sequence
    # Compute reverse reading frames
    r1 = translate_frame(reverse_seq[0:])
    r2 = translate_frame(reverse_seq[1:])
    r3 = translate_frame(reverse_seq[2:])
    # Return results in a dictionary
    return {
        'f1': f1,
        'f2': f2,
        'f3': f3,
        'r1': r1,
        'r2': r2,
        'r3': r3
    }
# Test code
dna_sequence = "ATGCGACCTTGATAG"
protein_translations = translate_dna(dna_sequence)
print(protein_translations)
